// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NewLoanPool extends ethereum.Event {
  get params(): NewLoanPool__Params {
    return new NewLoanPool__Params(this);
  }
}

export class NewLoanPool__Params {
  _event: NewLoanPool;

  constructor(event: NewLoanPool) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get loanPool(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get collateralAmount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get minimumBidAmount(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get auctionInterval(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get auctionDuration(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get maxParticipants(): i32 {
    return this._event.parameters[6].value.toI32();
  }

  get tokenAddress(): Address {
    return this._event.parameters[7].value.toAddress();
  }

  get lendingPool(): string {
    return this._event.parameters[8].value.toString();
  }

  get creator(): Address {
    return this._event.parameters[9].value.toAddress();
  }

  get createdAt(): BigInt {
    return this._event.parameters[10].value.toBigInt();
  }
}

export class loanPoolFactory extends ethereum.SmartContract {
  static bind(address: Address): loanPoolFactory {
    return new loanPoolFactory("loanPoolFactory", address);
  }

  totalPools(): BigInt {
    let result = super.call("totalPools", "totalPools():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalPools(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalPools", "totalPools():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class AddLoanPoolCall extends ethereum.Call {
  get inputs(): AddLoanPoolCall__Inputs {
    return new AddLoanPoolCall__Inputs(this);
  }

  get outputs(): AddLoanPoolCall__Outputs {
    return new AddLoanPoolCall__Outputs(this);
  }
}

export class AddLoanPoolCall__Inputs {
  _call: AddLoanPoolCall;

  constructor(call: AddLoanPoolCall) {
    this._call = call;
  }

  get maximumBidAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get minimumBidAmount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get auctionInterval(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get auctionDuration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get maxParticipants(): i32 {
    return this._call.inputValues[4].value.toI32();
  }

  get token(): Address {
    return this._call.inputValues[5].value.toAddress();
  }
}

export class AddLoanPoolCall__Outputs {
  _call: AddLoanPoolCall;

  constructor(call: AddLoanPoolCall) {
    this._call = call;
  }
}
